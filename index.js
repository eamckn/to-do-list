(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>d});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    height: 100%;\n\n    --skyblue-dark: #0284c7;\n    --skyblue-med: #38bdf8;\n    --skyblue-light: #bae6fd; \n\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nbody {\n    height: 100%;\n\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    height: 10vh;\n\n    flex: auto;\n\n    background-color: var(--skyblue-dark);\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#content {\n    height: 90vh;\n\n    flex: auto;\n\n    display: flex;\n}\n\n#sidebar {\n    width: 25%;\n    height: 100%;\n    background-color: var(--skyblue-light);\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 1rem;\n    gap: 1rem;\n}\n\n#sidebar button#all-todos {\n    font-size: 1.5rem;\n    font-weight: 700;\n\n    background-color: var(--skyblue-med);\n    border: none;\n\n    padding: 1.5rem;\n    border-radius: 2rem;\n}\n\n#sidebar #projects {\n    display: flex;\n    gap: 2rem;\n\n    align-items: center;\n}\n\nbutton#create-project,\nbutton#create-todo {\n    width: 4rem;\n    height: 4rem;\n\n    font-size: 2rem;\n    border-radius: 2rem;\n    background-color: var(--skyblue-dark);\n    border: none;\n}\n\n#sidebar div#projects ~ button {\n    font-size: 1.15rem;;\n\n    padding: 1rem;\n    background: none;\n    border: none;\n    border-radius: 2rem;\n}\n\n#content button:hover {\n    color: white;\n    background-color: rgba(0, 0, 0, .2) !important;\n}\n\n#main {\n    width: 75%;\n    height: 100%;\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#display-header {\n    flex: auto;\n\n    height: 10%;\n    width: auto;\n\n    padding: 3rem 2rem;\n    background-color: var(--skyblue-med);\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#current-project {\n    font-size: 2rem;\n    font-weight: 700;\n\n    padding-bottom: .5rem;\n    border-bottom: 4px solid black;\n}\n\n#display {\n    width: 100%;\n    height: 100%;\n    background-color: var(--skyblue-med);\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n\n    gap: 1rem;\n    padding: 0 2rem 2rem 2rem;\n}\n\ndiv.todo {\n    flex: 0 1 auto;\n\n    height: auto;\n    padding: 1rem;\n    border: 1px solid black;\n    background-color: var(--skyblue-light);\n    gap: 1rem;\n    border-radius: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.priority-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.priority-button {\n    width: 2rem;\n    height: 2rem;\n    border-radius: 1rem;\n    border: none;\n}\n\n.todo .todo-info {\n    display: flex;\n    flex-direction: column;\n\n    width: 40%;\n    margin-right: auto;\n}\n\n.todo-info .title.paragraph {\n    font-size: 2rem;\n}\n\n.todo-info .description.paragraph {\n    width: 100%;\n}\n\n.options-container {\n    display: flex;\n    align-items: center;\n\n    gap: 2rem;\n}\n\n.options-container input {\n    transform: scale(2);\n}\n\n.image-container {\n    height: 50%;\n    width: 2rem;\n\n    margin: auto 0;\n\n    display: flex;\n    align-items: center;\n}\n\n.image-container img:hover {\n    background-color: rgb(0, 0, 0, .2)\n}\n\ndialog {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 40%;\n\n    padding: 2rem;\n}\n\ndialog form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nform input {\n    padding: .5rem;\n}\n\nform fieldset {\n    width: 80%;\n\n    text-align: center;\n    border: none;\n}\n\nform ul {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\nform li {\n    list-style-type: none;\n\n    display: inline-block;\n}\n\nform button {\n    width: 40%;\n    height: 3rem;\n\n    font-size: 1rem;\n\n    padding: .5rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,YAAY;;IAEZ,uBAAuB;IACvB,sBAAsB;IACtB,wBAAwB;;IAExB,gDAAgD;AACpD;;AAEA;IACI,YAAY;;IAEZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;;IAEZ,UAAU;;IAEV,qCAAqC;;IAErC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;;IAEZ,UAAU;;IAEV,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,sCAAsC;;IAEtC,UAAU;;IAEV,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;IAEnB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;;IAEhB,oCAAoC;IACpC,YAAY;;IAEZ,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;;IAET,mBAAmB;AACvB;;AAEA;;IAEI,WAAW;IACX,YAAY;;IAEZ,eAAe;IACf,mBAAmB;IACnB,qCAAqC;IACrC,YAAY;AAChB;;AAEA;IACI,kBAAkB;;IAElB,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,8CAA8C;AAClD;;AAEA;IACI,UAAU;IACV,YAAY;;IAEZ,UAAU;;IAEV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;;IAEV,WAAW;IACX,WAAW;;IAEX,kBAAkB;IAClB,oCAAoC;;IAEpC,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,gBAAgB;;IAEhB,qBAAqB;IACrB,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;;IAEpC,UAAU;;IAEV,aAAa;IACb,sBAAsB;;IAEtB,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,cAAc;;IAEd,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,sCAAsC;IACtC,SAAS;IACT,mBAAmB;;IAEnB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;;IAEtB,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;;IAEnB,SAAS;AACb;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,WAAW;;IAEX,cAAc;;IAEd,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI;AACJ;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,gCAAgC;;IAEhC,UAAU;;IAEV,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;;IAEV,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,qBAAqB;;IAErB,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,YAAY;;IAEZ,eAAe;;IAEf,cAAc;AAClB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    height: 100%;\n\n    --skyblue-dark: #0284c7;\n    --skyblue-med: #38bdf8;\n    --skyblue-light: #bae6fd; \n\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nbody {\n    height: 100%;\n\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    height: 10vh;\n\n    flex: auto;\n\n    background-color: var(--skyblue-dark);\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#content {\n    height: 90vh;\n\n    flex: auto;\n\n    display: flex;\n}\n\n#sidebar {\n    width: 25%;\n    height: 100%;\n    background-color: var(--skyblue-light);\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 1rem;\n    gap: 1rem;\n}\n\n#sidebar button#all-todos {\n    font-size: 1.5rem;\n    font-weight: 700;\n\n    background-color: var(--skyblue-med);\n    border: none;\n\n    padding: 1.5rem;\n    border-radius: 2rem;\n}\n\n#sidebar #projects {\n    display: flex;\n    gap: 2rem;\n\n    align-items: center;\n}\n\nbutton#create-project,\nbutton#create-todo {\n    width: 4rem;\n    height: 4rem;\n\n    font-size: 2rem;\n    border-radius: 2rem;\n    background-color: var(--skyblue-dark);\n    border: none;\n}\n\n#sidebar div#projects ~ button {\n    font-size: 1.15rem;;\n\n    padding: 1rem;\n    background: none;\n    border: none;\n    border-radius: 2rem;\n}\n\n#content button:hover {\n    color: white;\n    background-color: rgba(0, 0, 0, .2) !important;\n}\n\n#main {\n    width: 75%;\n    height: 100%;\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#display-header {\n    flex: auto;\n\n    height: 10%;\n    width: auto;\n\n    padding: 3rem 2rem;\n    background-color: var(--skyblue-med);\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#current-project {\n    font-size: 2rem;\n    font-weight: 700;\n\n    padding-bottom: .5rem;\n    border-bottom: 4px solid black;\n}\n\n#display {\n    width: 100%;\n    height: 100%;\n    background-color: var(--skyblue-med);\n\n    flex: auto;\n\n    display: flex;\n    flex-direction: column;\n\n    gap: 1rem;\n    padding: 0 2rem 2rem 2rem;\n}\n\ndiv.todo {\n    flex: 0 1 auto;\n\n    height: auto;\n    padding: 1rem;\n    border: 1px solid black;\n    background-color: var(--skyblue-light);\n    gap: 1rem;\n    border-radius: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.priority-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.priority-button {\n    width: 2rem;\n    height: 2rem;\n    border-radius: 1rem;\n    border: none;\n}\n\n.todo .todo-info {\n    display: flex;\n    flex-direction: column;\n\n    width: 40%;\n    margin-right: auto;\n}\n\n.todo-info .title.paragraph {\n    font-size: 2rem;\n}\n\n.todo-info .description.paragraph {\n    width: 100%;\n}\n\n.options-container {\n    display: flex;\n    align-items: center;\n\n    gap: 2rem;\n}\n\n.options-container input {\n    transform: scale(2);\n}\n\n.image-container {\n    height: 50%;\n    width: 2rem;\n\n    margin: auto 0;\n\n    display: flex;\n    align-items: center;\n}\n\n.image-container img:hover {\n    background-color: rgb(0, 0, 0, .2)\n}\n\ndialog {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 40%;\n\n    padding: 2rem;\n}\n\ndialog form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nform input {\n    padding: .5rem;\n}\n\nform fieldset {\n    width: 80%;\n\n    text-align: center;\n    border: none;\n}\n\nform ul {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\nform li {\n    list-style-type: none;\n\n    display: inline-block;\n}\n\nform button {\n    width: 40%;\n    height: 3rem;\n\n    font-size: 1rem;\n\n    padding: .5rem;\n}"],sourceRoot:""}]);const d=a},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],l=o.base?c[0]+o.base:c[0],A=i[l]||0,s="".concat(l," ").concat(A);i[l]=A+1;var u=t(s),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=r(p,o);o.byIndex=d,n.splice(d,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=t(i[a]);n[d].references--}for(var c=o(e,r),l=0;l<i.length;l++){var A=t(i[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=c}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,t.d({},{p:()=>v});var o=t(72),r=t.n(o),i=t(825),a=t.n(i),d=t(659),c=t.n(d),l=t(56),A=t.n(l),s=t(540),u=t.n(s),p=t(113),m=t.n(p),f=t(208),h={};h.styleTagTransform=m(),h.setAttributes=A(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=u(),r()(f.A,h),f.A&&f.A.locals&&f.A.locals;const g=t.p+"bcf8d6ff346603c8a51a.svg",b=t.p+"ae589010d8b937c5a909.svg";document.querySelector("#content"),document.querySelector("#sidebar"),document.querySelector("#display");const C=document.querySelector("#create-todo"),y=document.querySelector("#create-project"),I=document.querySelector("#all-todos"),v=function(){const e={create:function(e,n,t,o){return{title:e,description:n,duedate:t,priority:o,get:function(){return{title:e,description:n,duedate:t,priority:o,completed}},updateDescription:function(e){this.description=e},updateTitle:function(e){this.title=e},updateDueDate:function(e){this.duedate=e},updatePriority:function(e){this.priority=e}}}},n={create:function(e){let n=new Array;const t=function(){return{name:e,todos:n}};return{name:e,todos:n,get:t,addTodo:function(e){this.todos.push(e)},removeTodo:function(e){let n=e.title,o=0;for(const e of this.todos){if(n===e.title)return console.log(`Found todo to remove in project ${t().name}`),void this.todos.splice(o,1);o++}}}}},t=function(){const e=document.querySelector("#content"),n=document.querySelector("#sidebar"),t=document.querySelector("#display");function o(e,n){let t=e.querySelector(".todo-info p:nth-child(1)"),o=e.querySelector(".todo-info p:nth-child(2)"),r=e.querySelector(".todo-info p:nth-child(3)"),i=e.querySelector(".priority-container button");t.innerHTML=n.title,o.innerHTML=n.duedate,r.innerHTML=n.description,a(i,n)}function r(){const n=document.createElement("dialog"),t=document.createElement("form"),o=document.createElement("label"),r=document.createElement("input"),i=document.createElement("label"),a=document.createElement("textarea"),d=document.createElement("label"),c=document.createElement("input"),l=document.createElement("fieldset"),A=document.createElement("legend"),s=document.createElement("ul"),u=document.createElement("li"),p=document.createElement("label"),m=document.createElement("input"),f=document.createElement("li"),h=document.createElement("label"),g=document.createElement("input"),b=document.createElement("li"),C=document.createElement("label"),y=document.createElement("input"),I=document.createElement("button");return o.innerHTML="Title",i.innerHTML="Description",d.innerHTML="Due Date",A.innerHTML="Priority",p.innerHTML="Low",h.innerHTML="Medium",C.innerHTML="High",I.innerHTML="Add",t.setAttribute("method","dialog"),o.setAttribute("for","title"),r.setAttribute("type","text"),r.setAttribute("id","title"),r.setAttribute("name","title"),i.setAttribute("for","description"),a.setAttribute("rows","8"),a.setAttribute("cols","20"),a.setAttribute("id","description"),a.setAttribute("name","description"),d.setAttribute("for","duedate"),c.setAttribute("type","text"),c.setAttribute("id","duedate"),c.setAttribute("name","duedate"),p.setAttribute("for","low"),m.setAttribute("type","radio"),m.setAttribute("id","low"),m.setAttribute("name","priority"),m.setAttribute("value","low"),h.setAttribute("for","medium"),g.setAttribute("type","radio"),g.setAttribute("id","medium"),g.setAttribute("name","priority"),g.setAttribute("value","medium"),C.setAttribute("for","high"),y.setAttribute("type","radio"),y.setAttribute("id","high"),y.setAttribute("name","priority"),y.setAttribute("value","high"),l.appendChild(A),l.appendChild(s),s.appendChild(u),s.appendChild(f),s.appendChild(b),u.appendChild(p),u.appendChild(m),f.appendChild(h),f.appendChild(g),b.appendChild(C),b.appendChild(y),t.appendChild(o),t.appendChild(r),t.appendChild(i),t.appendChild(a),t.appendChild(d),t.appendChild(c),t.appendChild(l),t.appendChild(I),n.appendChild(t),e.appendChild(n),n}function i(e){const n=document.createElement("div");n.className="todo";const i=document.createElement("div");i.className="priority-container";const d=document.createElement("button");d.className="priority-button",i.appendChild(d);const c=document.createElement("div");c.className="todo-info";const l=document.createElement("p");l.innerHTML=`${e.title}`,l.className="title paragraph";const A=document.createElement("p");A.innerHTML=`${e.duedate}`,A.className="duedate paragraph";const s=document.createElement("p");s.innerHTML=`${e.description}`,s.className="description paragraph",s.style.display="none",c.appendChild(l),c.appendChild(A),c.appendChild(s);const u=document.createElement("div");u.className="options-container";const p=document.createElement("div");p.className="image-container options-item";const m=new Image;m.src=g;const f=document.createElement("input");f.className="options-item",f.setAttribute("type","checkbox");const h=document.createElement("div");h.className="image-container options-item";const C=new Image;C.src=b,p.appendChild(m),h.appendChild(C),u.appendChild(h),u.appendChild(f),u.appendChild(p),n.appendChild(i),n.appendChild(c),n.appendChild(u),t.appendChild(n),a(d,e),c.addEventListener("click",(function(){!function(e){e.style.display="none"===e.style.display?"block":"none"}(s)})),m.addEventListener("click",(function(){t.removeChild(n),v.removeFromCurrentProject(e)})),C.addEventListener("click",(function(){!function(e,n){let t=r();t.querySelector("input[id = 'title']").value=e.title,t.querySelector("textarea[id = 'description']").value=e.description,t.querySelector("input[id = 'duedate']").value=e.duedate,"low"===e.priority?t.querySelector("input[id = 'low']").checked=!0:"medium"===e.priority?t.querySelector("input[id = 'medium']").checked=!0:"high"===e.priority&&(t.querySelector("input[id = 'high']").checked=!0),t.showModal(),t.querySelector("button").addEventListener("click",(function(){let r=t.querySelector("input[id = 'title']").value,i=t.querySelector("textarea[id = 'description']").value,a=t.querySelector("input[id = 'duedate']").value,d=t.querySelector("input[name = 'priority']:checked").value;v.editTodo(e,{title:r,description:i,duedate:a,priority:d}),o(n,{title:r,description:i,duedate:a,priority:d})}))}(e,n)}))}function a(e,n){var t;e.style.backgroundColor="low"===(t=n.priority)?"green":"medium"===t?"yellow":"high"===t?"red":void 0}function d(){for(;t.firstChild;)t.removeChild(t.firstChild)}function c(e){document.querySelector("p#current-project").innerHTML=e.name}return{showTodoinDisplay:i,displayNewProject:function(e){const t=document.createElement("button");t.innerHTML=e.name,n.appendChild(t),t.addEventListener("click",(function(){!function(e){d(),console.log(e);for(const n of e.todos)i(n)}(e),v.updateCurrentProject(e),c(e)}))},displayDialogForInput:function(){let e=r();e.querySelector("button").addEventListener("click",(function(){let n=e.querySelector("input[id = 'title']").value,t=e.querySelector("textarea[id = 'description']").value,o=e.querySelector("input[id = 'duedate']").value,r=e.querySelector("input[name = 'priority']:checked").value;v.makeNewTodo({title:n,description:t,duedate:o,priority:r})})),e.showModal()},editTodoInDisplay:o,clearDisplay:d,displayDialogForProject:function(){let n=function(){const n=document.createElement("dialog"),t=document.createElement("form"),o=document.createElement("label"),r=document.createElement("input"),i=document.createElement("button");return t.setAttribute("method","dialog"),o.setAttribute("for","project_name"),r.setAttribute("type","text"),r.setAttribute("id","project_name"),r.setAttribute("name","project_name"),o.innerHTML="New project name:",i.innerHTML="Add project",t.appendChild(o),t.appendChild(r),t.appendChild(i),n.appendChild(t),e.appendChild(n),n}();n.querySelector("button").addEventListener("click",(function(){let e=n.querySelector("input").value;v.makeNewProject(e)})),n.showModal()},showCurrentProjectInDisplay:c,showViewingAllTodos:function(){document.querySelector("p#current-project").innerHTML="All Tasks"}}}(),o=n.create("Default"),r=[o];let i=o,a=e.create("First ever task","Here's my description. It's really really long. I made it this long to test out how descriptions will wrap.","Tomorrow","low");function d(e){localStorage.setItem(`${e.name}`,JSON.stringify(e))}return o.addTodo(a),document.addEventListener("DOMContentLoaded",(function(){if(0!==localStorage.length){for(;r.length>0;)r.pop();for(let t=localStorage.length-1;t>=0;t--){let o=JSON.parse(localStorage.getItem(localStorage.key(t))),i=n.create("temp");delete i.name,delete i.todos,Object.assign(o,i);let a=e.create("a","b","c","low");delete a.title,delete a.description,delete a.duedate,delete a.priority,console.log(o);for(let e of o.todos)Object.assign(e,a);r.push(o)}i=r[0]}})),document.addEventListener("DOMContentLoaded",(function(){for(const e of r)t.displayNewProject(e)})),document.addEventListener("DOMContentLoaded",(function(){for(const e of i.todos)t.showTodoinDisplay(e)})),document.addEventListener("DOMContentLoaded",void t.showCurrentProjectInDisplay(i)),C.addEventListener("click",(function(){t.displayDialogForInput()})),y.addEventListener("click",(function(){t.displayDialogForProject()})),I.addEventListener("click",(function(){t.clearDisplay(),function(){for(const e of r)for(const n of e.todos)t.showTodoinDisplay(n)}(),t.showViewingAllTodos()})),{todo:e,proj:n,dom:t,updateCurrentProject:function(e){i=e,console.log(i)},makeNewTodo:function(n){let o=e.create(n.title,n.description,n.duedate,n.priority);i.addTodo(o),console.log(i.todos),d(i),t.showTodoinDisplay(o)},removeFromCurrentProject:function(e){i.removeTodo(e),d(i)},editTodo:function(e,n){for(const t of i.todos)t.title===e.title&&(t.updateTitle(n.title),t.updateDescription(n.description),t.updateDueDate(n.duedate),t.updatePriority(n.priority),d(i),console.log(t),console.log(i.todos))},makeNewProject:function(e){if(e){let o=n.create(e);r.push(o),d(o),t.displayNewProject(o)}}}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,